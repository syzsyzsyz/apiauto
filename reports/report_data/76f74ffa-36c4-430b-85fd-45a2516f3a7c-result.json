{"name": "test_add_exc[d0]", "status": "broken", "statusDetails": {"message": "TypeError: assert_equal() missing 1 required positional argument: 'self'", "trace": "setup_teardown = <appium.webdriver.webdriver.WebDriver (session=\"741cae93-acdb-4a43-9b0e-c3a0bd5fdf90\")>\nd = {'name': 'case001_参数化加法', 'num1': 13, 'num2': 11}\n\n    @pytest.mark.parametrize(\"d\", data)\n    def test_add_exc(setup_teardown,d):\n    \tdriver = setup_teardown\n    \n    \n    \ttest_jisaun = jisuan(driver=driver)\n    \texpected = d[\"num1\"] + d[\"num2\"]\n    \tlogging.info(\"当前执行用例->{0}\".format(d[\"name\"]))\n    \tres = test_jisaun.add(d[\"num1\"], d[\"num2\"])\n    \tlogging.info(\"期望结果是->{0},实际结果是->{1}\".format(expected, res))\n>   \tcheck.assert_equal(actual=res, expected=int(expected))\nE    TypeError: assert_equal() missing 1 required positional argument: 'self'\n\ntestcase\\test_add.py:28: TypeError"}, "attachments": [{"name": "log", "source": "c9c62d50-31fb-41e7-aa53-58c29e64d919-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "d", "value": "{'name': 'case001_参数化加法', 'num1': 13, 'num2': 11}"}], "start": 1685288008276, "stop": 1685288012494, "uuid": "6a0e5e38-7f23-4a0f-a360-eb4003030840", "historyId": "0e3b372ea89f7d166f6b6b795a1870ed", "testCaseId": "84ffb3ef8521b981b54d6be9709026d2", "fullName": "testcase.test_add#test_add_exc", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_add"}, {"name": "host", "value": "syzpc"}, {"name": "thread", "value": "3212-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_add"}]}