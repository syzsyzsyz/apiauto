{"name": "test_add_exc[d0]", "status": "broken", "statusDetails": {"message": "TypeError: assert_equal() missing 1 required positional argument: 'expected'", "trace": "setup_teardown = <appium.webdriver.webdriver.WebDriver (session=\"50c6d8dc-63ad-48d3-9949-fa52ed950eb0\")>\nd = {'name': 'case001_参数化加法', 'num1': 71, 'num2': 37}\n\n    @pytest.mark.parametrize(\"d\", data)\n    def test_add_exc(setup_teardown,d):\n    \tdriver = setup_teardown\n    \n    \n    \ttest_jisaun = jisuan(driver=driver)\n    \texpected = d[\"num1\"] + d[\"num2\"]\n    \tlogging.info(\"当前执行用例->{0}\".format(d[\"name\"]))\n    \tres = test_jisaun.add(d[\"num1\"], d[\"num2\"])\n    \tlogging.info(\"期望结果是->{0},实际结果是->{1}\".format(expected, res))\n>   \tcheck.assert_equal(int(expected), res)\nE    TypeError: assert_equal() missing 1 required positional argument: 'expected'\n\ntestcase\\test_add.py:28: TypeError"}, "attachments": [{"name": "log", "source": "0793d7dd-1450-4885-8fdb-d0cd871befd1-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "d", "value": "{'name': 'case001_参数化加法', 'num1': 71, 'num2': 37}"}], "start": 1685287807823, "stop": 1685287811911, "uuid": "d1407f83-ca7e-4238-a207-b6a612736290", "historyId": "0e3b372ea89f7d166f6b6b795a1870ed", "testCaseId": "84ffb3ef8521b981b54d6be9709026d2", "fullName": "testcase.test_add#test_add_exc", "labels": [{"name": "parentSuite", "value": "testcase"}, {"name": "suite", "value": "test_add"}, {"name": "host", "value": "syzpc"}, {"name": "thread", "value": "9436-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "testcase.test_add"}]}