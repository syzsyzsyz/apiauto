{
  "uid" : "7b4a0882fb1ff69f",
  "name" : "test_add_exc[d1]",
  "fullName" : "testcase.test_add#test_add_exc",
  "historyId" : "6c90bdb9a20bffeee4e26e7f2f5dc4d0",
  "time" : {
    "start" : 1685288025235,
    "stop" : 1685288029389,
    "duration" : 4154
  },
  "status" : "broken",
  "statusMessage" : "TypeError: assert_equal() missing 1 required positional argument: 'self'",
  "statusTrace" : "setup_teardown = <appium.webdriver.webdriver.WebDriver (session=\"d6d00f1e-b145-4249-a87f-2be98c3b8473\")>\nd = {'name': 'case002_参数化加法', 'num1': 91, 'num2': 63}\n\n    @pytest.mark.parametrize(\"d\", data)\n    def test_add_exc(setup_teardown,d):\n    \tdriver = setup_teardown\n    \n    \n    \ttest_jisaun = jisuan(driver=driver)\n    \texpected = d[\"num1\"] + d[\"num2\"]\n    \tlogging.info(\"当前执行用例->{0}\".format(d[\"name\"]))\n    \tres = test_jisaun.add(d[\"num1\"], d[\"num2\"])\n    \tlogging.info(\"期望结果是->{0},实际结果是->{1}\".format(expected, res))\n>   \tcheck.assert_equal(actual=res, expected=int(expected))\nE    TypeError: assert_equal() missing 1 required positional argument: 'self'\n\ntestcase\\test_add.py:28: TypeError",
  "flaky" : false,
  "newFailed" : false,
  "newBroken" : false,
  "newPassed" : false,
  "retriesCount" : 0,
  "retriesStatusChange" : false,
  "beforeStages" : [ {
    "name" : "_session_faker",
    "time" : {
      "start" : 1685287996908,
      "stop" : 1685287997088,
      "duration" : 180
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_verify_url",
    "time" : {
      "start" : 1685287997088,
      "stop" : 1685287997088,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "sensitive_url",
    "time" : {
      "start" : 1685287997088,
      "stop" : 1685287997089,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "base_url",
    "time" : {
      "start" : 1685287997088,
      "stop" : 1685287997088,
      "duration" : 0
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "_skip_sensitive",
    "time" : {
      "start" : 1685288013438,
      "stop" : 1685288013439,
      "duration" : 1
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  }, {
    "name" : "setup_teardown",
    "time" : {
      "start" : 1685288013439,
      "stop" : 1685288025233,
      "duration" : 11794
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "testStage" : {
    "status" : "broken",
    "statusMessage" : "TypeError: assert_equal() missing 1 required positional argument: 'self'",
    "statusTrace" : "setup_teardown = <appium.webdriver.webdriver.WebDriver (session=\"d6d00f1e-b145-4249-a87f-2be98c3b8473\")>\nd = {'name': 'case002_参数化加法', 'num1': 91, 'num2': 63}\n\n    @pytest.mark.parametrize(\"d\", data)\n    def test_add_exc(setup_teardown,d):\n    \tdriver = setup_teardown\n    \n    \n    \ttest_jisaun = jisuan(driver=driver)\n    \texpected = d[\"num1\"] + d[\"num2\"]\n    \tlogging.info(\"当前执行用例->{0}\".format(d[\"name\"]))\n    \tres = test_jisaun.add(d[\"num1\"], d[\"num2\"])\n    \tlogging.info(\"期望结果是->{0},实际结果是->{1}\".format(expected, res))\n>   \tcheck.assert_equal(actual=res, expected=int(expected))\nE    TypeError: assert_equal() missing 1 required positional argument: 'self'\n\ntestcase\\test_add.py:28: TypeError",
    "steps" : [ ],
    "attachments" : [ {
      "uid" : "e6f57b7a348be710",
      "name" : "log",
      "source" : "e6f57b7a348be710.txt",
      "type" : "text/plain",
      "size" : 143
    } ],
    "parameters" : [ ],
    "attachmentsCount" : 1,
    "shouldDisplayMessage" : true,
    "hasContent" : true,
    "stepsCount" : 0
  },
  "afterStages" : [ {
    "name" : "setup_teardown::0",
    "time" : {
      "start" : 1685288029403,
      "stop" : 1685288030266,
      "duration" : 863
    },
    "status" : "passed",
    "steps" : [ ],
    "attachments" : [ ],
    "parameters" : [ ],
    "attachmentsCount" : 0,
    "shouldDisplayMessage" : false,
    "hasContent" : false,
    "stepsCount" : 0
  } ],
  "labels" : [ {
    "name" : "parentSuite",
    "value" : "testcase"
  }, {
    "name" : "suite",
    "value" : "test_add"
  }, {
    "name" : "host",
    "value" : "syzpc"
  }, {
    "name" : "thread",
    "value" : "3212-MainThread"
  }, {
    "name" : "framework",
    "value" : "pytest"
  }, {
    "name" : "language",
    "value" : "cpython3"
  }, {
    "name" : "package",
    "value" : "testcase.test_add"
  }, {
    "name" : "resultFormat",
    "value" : "allure2"
  } ],
  "parameters" : [ {
    "name" : "d",
    "value" : "{'name': 'case002_参数化加法', 'num1': 91, 'num2': 63}"
  } ],
  "links" : [ ],
  "hidden" : true,
  "retry" : true,
  "extra" : {
    "categories" : [ ],
    "tags" : [ ]
  },
  "source" : "7b4a0882fb1ff69f.json",
  "parameterValues" : [ "{'name': 'case002_参数化加法', 'num1': 91, 'num2': 63}" ]
}